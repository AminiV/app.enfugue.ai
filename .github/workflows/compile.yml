name: Compile Portable Distribution
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      api:
        required: true
        type: string
jobs:
  compile-distribution:
    runs-on: ${{ inputs.os }}
    env:
      MINIMAL_BUILD: 1
    steps:
    - uses: actions/checkout@v3
    - name: Setup Miniconda (Linux/MacOS)
      if: ${{ !contains(inputs.os, 'windows') }}
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        miniconda-version: latest
    - name: Setup Miniconda (Windows)
      if: ${{ contains(inputs.os, 'windows') }}
      uses: conda-incubator/setup-miniconda@v2.2.0
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Clean unneeded pre-installed code
      if: ${{ contains(inputs.os, 'ubuntu') }}
      run: |
        echo "Storage before:"
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        echo "Storage after:"
        df -h
    - name: Install dependencies
      run: |
        conda env update --file environments/build/${{ inputs.os }}/${{ inputs.api }}.yml --name base
    - name: Output Environment Information for Debugging
      run: |
        conda list
        pip freeze
    - name: Clean space
      run: |
        conda clean -aqy
    - name: Output Environment Information for Debugging
      run: |
        conda list
        pip freeze
    - name: Compile Linux package
      if: ${{ !contains(inputs.os, 'windows') }} 
      run: |
        make
    - name: Compile Windows package
      if: ${{ contains(inputs.os, 'windows') }} 
      shell: bash
      run: |
        . /c/Miniconda/etc/profile.d/conda.sh
        conda activate base
        make
    - name: Clean space and split artifact
      if: ${{ !contains(inputs.os, 'windows') }} 
      run: |
        conda install --revision 0
        conda install make
        conda clean -aqy
        make split
    - name: Upload Linux artifact
      if: ${{ !contains(inputs.os, 'windows') }} 
      uses: actions/upload-artifact@v3.1.2
      with:
        name: ${{ inputs.os }}-${{ inputs.api }}
        path: ./enfugue-server*tar.gz*
    - name: Upload Windows artifact
      if: ${{ contains(inputs.os, 'windows') }} 
      uses: actions/upload-artifact@v3.1.2
      with:
        name: ${{ inputs.os }}-${{ inputs.api }}
        path: ./build/enfugue-server*zip*
